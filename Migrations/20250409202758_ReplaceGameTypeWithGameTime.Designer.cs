// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using WarhammerScheduler.Data;

#nullable disable

namespace WarhammerScheduler.Migrations
{
    [DbContext(typeof(SchedulerContext))]
    [Migration("20250409202758_ReplaceGameTypeWithGameTime")]
    partial class ReplaceGameTypeWithGameTime
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder.HasAnnotation("ProductVersion", "9.0.4");

            modelBuilder.Entity("WarhammerScheduler.Models.Game", b =>
                {
                    b.Property<int>("GameID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<DateTime>("GameDate")
                        .HasColumnType("TEXT");

                    b.Property<TimeSpan>("GameTime")
                        .HasColumnType("TEXT");

                    b.Property<string>("Notes")
                        .HasColumnType("TEXT");

                    b.Property<int>("PointsLimit")
                        .HasColumnType("INTEGER");

                    b.HasKey("GameID");

                    b.ToTable("Games");
                });

            modelBuilder.Entity("WarhammerScheduler.Models.GamePlayer", b =>
                {
                    b.Property<int>("GamePlayerID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("Faction")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<int>("GameID")
                        .HasColumnType("INTEGER");

                    b.Property<string>("PlayerName")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.HasKey("GamePlayerID");

                    b.HasIndex("GameID");

                    b.ToTable("GamePlayers");
                });

            modelBuilder.Entity("WarhammerScheduler.Models.GamePlayer", b =>
                {
                    b.HasOne("WarhammerScheduler.Models.Game", "Game")
                        .WithMany("Players")
                        .HasForeignKey("GameID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Game");
                });

            modelBuilder.Entity("WarhammerScheduler.Models.Game", b =>
                {
                    b.Navigation("Players");
                });
#pragma warning restore 612, 618
        }
    }
}
